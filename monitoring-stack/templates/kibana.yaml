apiVersion: v1
kind: Service
metadata:
  name: kibana-service
  namespace: {{ .Values.namespace }}
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '3000'
spec:
  selector:
    app: kibana
  ports:
    - protocol: TCP
      port: 5601
      targetPort: 5601
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: {{ .Values.namespace }}
  labels:
    app: kibana
spec:
  replicas: {{ .Values.kibana.replicas }}
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: {{ .Values.kibana.image }}
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: {{ .Values.kibana.resources.limit_cpu }}
            memory: {{ .Values.kibana.resources.limit_memory }}
          requests:
            cpu: {{ .Values.kibana.resources.request_cpu }}
            memory: {{ .Values.kibana.resources.request_memory }}
        env:
          - name: ELASTICSEARCH_URL
            value: http://elasticsearch:9200
          - name: ELASTICSEARCH_USERNAME
            value: {{ .Values.kibana.username }}
          - name: ELASTICSEARCH_PASSWORD
            value: {{ .Values.kibana.password }}
        ports:
        - containerPort: 5601
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kibana-ingress
  namespace : {{ .Values.namespace }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
spec:
  tls:
  - hosts:
    - {{ .Values.kibana.ingressdomain }}
    secretName: cert
  rules:
  - host: {{ .Values.kibana.ingressdomain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: kibana-service
          servicePort: 5601
